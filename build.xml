<project basedir="." name="Test Automation" default="help">
    <property name="build.compiler" value="extJavac"/>
    <property name="src.dir" value="${basedir}/java/src"/>
    <property name="resources.dir" value="${basedir}/java/resources"/>
    <property name="classes.dir" value="${basedir}/java/classes/main"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="build.dir" value="${basedir}/build"/>
    <property name="testautomation.jar" value="${build.dir}/testautomation.jar"/>

    <path id="testautomation.classpath">
        <file file="${testautomation.jar}"/>
        <fileset dir="${lib.dir}">
            <include name="*.jar" />
        </fileset>
    </path>

    <target name="clean" description="cleans build output">
        <delete dir="${classes.dir}" quiet="true" includeemptydirs="true"/>
        <delete dir="${build.dir}" quiet="true" includeemptydirs="true"/>
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${build.dir}"/>
	<mkdir dir="${resources.dir}"/>
    </target>

    <target name="resources">
        <copy todir="${classes.dir}">
            <fileset dir="${resources.dir}"/>
        </copy>
    </target>

    <target name="build" depends="resources" description="sets up the environment for test execution">
        <javac debug="true"
               srcdir="${src.dir}"
               destdir="${classes.dir}"
               includeAntRuntime="false"
               classpathref="testautomation.classpath"/>
        <jar basedir="${classes.dir}" jarfile="${testautomation.jar}"/>
    </target>

	<taskdef name="testng" classpathref="testautomation.classpath" classname="org.testng.TestNGAntTask"/>

	<!-- Usage: ant run_test -Dfeature="LocalTest" -Dtest="verifyNinethPage" -->
	<target name="run_test" description="run test method">
		<testng classpathref="testautomation.classpath" methods="org.openqa.selenium.example.${feature}.${test}">
			<classfileset dir="${build.dir}" includes="org.openqa.selenium.example/*.class"/>
		</testng>
	</target>

	<!-- Usage: ant run_chrome_tests -Dgroups="regression,smoke" -Dexcludedgroups="inprogress" -->
	<!-- in this target you can use multiple parameters, all parameters are comma-separated -->
	<!-- groups and excludedgroups parameters are optional -->
	<target name="run_chrome_tests" description="run all tests of selected type(s)">
		<property name="groups" value=""/>
		<property name="excludedgroups" value=""/>
		<testng classpathref="testautomation.classpath" groups="${groups}" excludedgroups="${excludedgroups}">
			<xmlfileset dir="${basedir}" includes="chrome_tests.xml"/>
		</testng>
	</target>

	<!-- Usage: ant run_firefox_tests -Dgroups="regression,smoke" -Dexcludedgroups="inprogress" -->
	<!-- in this target you can use multiple parameters, all parameters are comma-separated -->
	<!-- groups and excludedgroups parameters are optional -->
	<target name="run_firefox_tests" description="run all tests of selected type(s)">
		<property name="groups" value=""/>
		<property name="excludedgroups" value=""/>		
		<testng classpathref="testautomation.classpath" groups="${groups}" excludedgroups="${excludedgroups}">
			<xmlfileset dir="${basedir}" includes="firefox_tests.xml"/>
		</testng>
	</target>

    <target name="help">
        <echo message="Syntax: ant run_test -Dfeature=&quot;LocalTest&quot; -Dtest=&quot;verifyNinethPage&quot;" />
        <echo message="Syntax: ant run_firefox_tests -Dgroups=&quot;regression,smoke&quot; -Dexcludedgroups=&quot;inprogress&quot;" />
        <echo message="Syntax: ant run_chrome_tests -Dgroups=&quot;regression,smoke&quot; -Dexcludedgroups=&quot;inprogress&quot;" />
    </target>

</project>
